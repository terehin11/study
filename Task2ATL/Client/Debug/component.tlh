// Created by Microsoft (R) C/C++ Compiler Version 12.00.30501.0 (133d383f).
//
// c:\users\534.pd\desktop\task2atl\client\debug\component.tlh
//
// C++ source equivalent of Win32 type library ../Debug/Component.dll
// compiler-generated file created 04/11/19 at 17:33:50 - DO NOT EDIT!

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace ComponentLib {

//
// Forward references and typedefs
//

struct __declspec(uuid("61f3e2b0-680d-4b38-aa60-82ef49262d6f"))
/* LIBID */ __ComponentLib;
struct /* coclass */ ComponentClass;
struct __declspec(uuid("c3b731c9-55e5-429a-bb3b-bacc9baadc5a"))
/* dual interface */ IComponentClass;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(IComponentClass, __uuidof(IComponentClass));

//
// Type library items
//

struct __declspec(uuid("d742843c-95b8-43f9-9fbb-ce04eeb3488a"))
ComponentClass;
    // [ default ] interface IComponentClass

struct __declspec(uuid("c3b731c9-55e5-429a-bb3b-bacc9baadc5a"))
IComponentClass : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetCount))
    unsigned long Count;
    __declspec(property(get=GetMean))
    double Mean;

    //
    // Wrapper methods for error-handling
    //

    HRESULT Add (
        double value );
    HRESULT Remove (
        double value );
    SAFEARRAY * GetData ( );
    unsigned long GetCount ( );
    double GetMean ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ double value ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ double value ) = 0;
      virtual HRESULT __stdcall raw_GetData (
        /*[out,retval]*/ SAFEARRAY * * _array ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ unsigned long * pVal ) = 0;
      virtual HRESULT __stdcall get_Mean (
        /*[out,retval]*/ double * pVal ) = 0;
};

//
// Wrapper method implementations
//

#include "c:\users\534.pd\desktop\task2atl\client\debug\component.tli"

} // namespace ComponentLib

#pragma pack(pop)
